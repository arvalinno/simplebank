# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run unit tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.3-alpine3.20
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with: 
        go-version: '1.22.x'

    - name: Install golang-migrate
      run: | 
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/migrate
        which migrate
    
    - name: Run migrations
      run: make migrateup

    - name: Test
      env:
        DB_DRIVER: ${{ secrets.DB_DRIVER }}
        DB_SOURCE: ${{ secrets.DB_SOURCE }}
        SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
        TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
        ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}
        REFRESH_TOKEN_DURATION: ${{ secrets.REFRESH_TOKEN_DURATION }}
      run: make test